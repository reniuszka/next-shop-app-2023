import React from "react";
import { ProductListItem } from "../components/Product";
// import { ProductDetails } from "../components/Product";
import { useQuery } from "react-query";
//wykonanie po stronie klienta i zapytanie o dane z komponentu i uzywamy react-query zamiast fetcha
const ProductsCSRPage = () => {
  //wykonanie zapytania hptt do innego serwisu
  const getProducts = async () => {
    const res = await fetch("https://fakestoreapi.com/products");
    const data: StoreApiResponse[] = await res.json();
    return data;
  };
  //klucz(pierwszy argument, potem funckja do sciagniecia danych z fetchem)
  //ten useQuery obudowywuje nasza funckje w inne metody i hooki reactowe i inferuje typ daych. getProducts to promise  ktory ma rozne stany
  const { isLoading, data, isError, error } = useQuery("products", getProducts);
  // const result = useQuery("products", getProducts);

  if (isLoading) {
    return <div>I am loading....</div>;
  }

  if (!data || error) {
    return <div>cos poszlo nie tak...</div>;
  }
  return (
    <ul className="grid gap-4 grid-cols-1 sm:grid-cols-2 md:grid-cols-3">
      {data.map((product) => {
        return (
          <li key={product.id} className="shadow-xl border-2">
            {/* mielismy inne nazwy pol */}
            {/* <ProductDetails
              data={{
                title: product.title,
                description: product.description,
                thumbnailUrl: product.image,
                thumbnailAlt: product.title,
                rating: product.rating.rate,
              }}
            /> */}

            <ProductListItem
              data={{
                id: product.id,
                title: product.title,
                thumbnailAlt: product.title,
                thumbnailUrl: product.image,
              }}
            />
          </li>
        );
      })}
    </ul>
  );
};

// Generated by https://quicktype.io
interface StoreApiResponse {
  id: number;
  title: string;
  price: number;
  description: string;
  category: string;
  image: string;
  rating: {
    rate: number;
    count: number;
  };
}

export default ProductsCSRPage;
